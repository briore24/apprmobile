/*
 * Licensed Materials - Property of IBM
 *
 * 5724-U18, 5737-M66
 *
 * (C) Copyright IBM Corp. 2022,2023 All Rights Reserved
 *
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with
 * IBM Corp.
 */

import {log} from '@maximo/maximo-js-api';
import CommonUtil from "./utils/CommonUtil";
const TAG = 'RejectController';

class RejectController {

  // Generated by WCA for GP
  /**
   * @function dialogInitialized
   * @description - This function is called when the dialog is initialized.
   * @param {Object} page - The page object.
   */
  dialogInitialized(page) {
    // @description - Page object.
    this.page = page;

    // @description - App object.
    this.app = this.page.parent.state.appVar;
    // @description - Delete appVar from parent page state.
    delete this.page.parent.state.appVar;

    // @description - Log message.
    log.t(TAG, 'dialogInitialized : disableDoneButton --> ' + this.page.parent.state.disableDoneButton);
  }

  
  // Generated by WCA for GP
  /**
   * @function dialogOpened
   * @description - This function is called when the dialog is opened.
   */
  dialogOpened() {
    // @description - Parent page state object
    this.page.parent.state.disableDoneButton = true;

    // @description - Page state object.
    this.page.state.disableDoneButton = true;

    // @description - Selected status of the work order.
    this.page.state.selectedStatus = "";

    // @description - App variable object.
    delete this.page.parent.state.appVar;

    // @description - Log object.
    log.t(TAG, 'dialogOpened : disableDoneButton --> ' + this.page.parent.state.disableDoneButton);

    // @description - Work order detail resource datasource.
    let woDetailResourceDS = this.app.findDatasource('woDetailResource');

    // @description - If datasource exists then reload it.
    if (woDetailResourceDS) {
      woDetailResourceDS.forceReload();
    }
  }

  // Generated by WCA for GP
  /**
   * @function rejectStatus
   * @description This function rejects the status of the work order.
   */
  async rejectStatus() {
    // @description This variable stores the parent page.
    let parentPage = this.page.parent;

    // @description This sets the loading status to true.
    this.page.parent.state.loadingstatus = true;

    // @description This calls the saveWorkLog method of parent page and saves the work log.
    await parentPage.callController('saveWorkLog', {
      longDescription: "",
      summary: ` ${this.page.state.selectedStatus.value} - ${this.page.state.selectedStatus.description}`,
      visibility: true
    }, true);
    const woDetailDs = await this.app.findDatasource("wodetails");
    await CommonUtil.removeAssigned(this.app, parentPage, woDetailDs);
    this.app.state.isRejected = true;
    const wolistds = this.page.parent.datasources[this.page.parent.state.selectedDS];
    
    await woDetailDs?.forceReload();
    await wolistds?.forceReload();
    // @description This sets the loading status to false.
    this.page.parent.state.loadingstatus = false;

    // @description This closes the status dialog.
    parentPage.findDialog(parentPage.state.statusDialog).closeDialog();
    // @description redirects to Schedule Page after rejection
    //istanbul ignore if
    if (!['schedule', 'approvals'].includes(this.app.currentPage.name)) {
      const schPage = (this.app.findPage("schedule")) ? 'schedule' : 'approvals';
      this.app.setCurrentPage({ name: schPage, resetScroll: true });
    }
    //istanbul ignore if
    if(CommonUtil.sharedData.clickedUnassignment) {
      delete CommonUtil.sharedData.clickedUnassignment;
      this.app?.findPage("schedule")?.findDialog('laborAssignmentLookup')?.closeDialog();
    }
  }

  // Generated by WCA for GP
  /**
   * @function selectStatus
   * @description - This function is called when a status is selected from the list.
   * @param {Object} item - The selected item.
   */
  selectStatus(item) {
    // @description - Page state object.
    this.page.state.disableDoneButton = false;

    // @description - Parent page state object.
    this.page.parent.state.disableDoneButton = false;

    // @description - Selected status of the work order.
    this.page.state.selectedStatus = item;

    // @description - Count of selected items in the reject list.
    if (this.page.parent.datasources.rejectList && this.page.parent.datasources.rejectList.state.selection.count > 0) {
      // @description - Parent page state object.
      this.page.parent.state.disableDoneButton = false;
    } else {
      // @description - Parent page state object.
      this.page.parent.state.disableDoneButton = true;
    }
  }

}

export default RejectController;